import com.example.roles.entitlements.model.Role;
import com.example.roles.entitlements.model.Resource;
import com.example.roles.entitlements.repository.RoleRepository;
import com.example.roles.entitlements.repository.ResourceRepository;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;

@Service
public class RoleService {
 private final RoleRepository roleRepository;
 private final ResourceRepository resourceRepository;

 public RoleService(RoleRepository roleRepository, ResourceRepository resourceRepository) {
 this.roleRepository = roleRepository;
 this.resourceRepository = resourceRepository;
 roleRepository;
 this.resourceRepository = resourceRepository;
 itory;
 }

 public Role addRole(Role role, Long resourceId) {
 Resource resource = resourceRepository.findById(resourceId)
 .orElseThrow(() -> new RuntimeException("Resource not found"));
 
 role.setResource(resource);
 role.setCreatedDate(LocalDateTime.now());
 role.setUpdatedDate(LocalDateTime.now());
 return roleRepository.save(role);
 }
}

import com.example.roles.entitlements.model.Role;
import com.example.roles.entitlements.model.Resource;
import com.example.roles.entitlements.service.RoleService;
import com.example.roles.entitlements.service.ResourceService;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;

import java.util.List;

@Controller
public class RoleController {
    private final RoleService roleService;
    private final ResourceService resourceService;

    public RoleController(RoleService roleService, ResourceService resourceService) {
        this.roleService = roleService;
        this.resourceService = resourceService;
    }

    @GetMapping("/roles/new")
    public String showRoleForm(Model model) {
        model.addAttribute("role", new Role());
        List<Resource> resources = resourceService.getAllResources();
        model.addAttribute("resources", resources);
        return "role_form"; // Thymeleaf template name
    }

    @PostMapping("/roles")
    public String addRole(@ModelAttribute Role role, @RequestParam Long resourceId) {
        roleService.addRole(role, resourceId);
        return "redirect:/roles/new"; // Redirect to form after submission
    }
}

<html xmlns:th="http://www.thymeleaf.org">
<head>
    <title>Add New Role</title>
</head>
<body>
<h1>Add New Role</h1>
<form action="#" th:action="@{/roles}" th:object="${role}" method="post">
    <label for="name">Role Name:</label>
    <input type="text" id="name" th:field="*{name}" required/>

    <label for="description">Description:</label>
    <input type="text" id="description" th:field="*{description}" required/>

    <label for="resource">Select Resource:</label>
    <select id="resource" name="resourceId" required>
        <option th:each="resource : ${resources}" th:value="${resource.id}" th:text="${resource.name}"></option>
    </select>

    <button type="submit">Add Role</button>
</form>
</body>
</html>