import javax.persistence.*;
import java.time.LocalDateTime;

@Entity
public class Resource {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String name;
    private String description;
    private Long version;

    @ManyToOne
    @JoinColumn(name = "application_id", nullable = false)
    private Application application; // Association with Application

    private String createdUserId;
    private LocalDateTime createdDate;
    private String updatedUserId;
    private LocalDateTime updatedDate;

    // Getters and Setters
    // ...
}

import com.example.roles.entitlements.model.Resource;
import com.example.roles.entitlements.model.Application;
import com.example.roles.entitlements.repository.ResourceRepository;
import com.example.roles.entitlements.repository.ApplicationRepository;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;

@Service
public class ResourceService {
    private final ResourceRepository resourceRepository;
    private final ApplicationRepository applicationRepository;

    public ResourceService(ResourceRepository resourceRepository, ApplicationRepository applicationRepository) {
        this.resourceRepository = resourceRepository;
        this.applicationRepository = applicationRepository;
    }

    public Resource addResource(Resource resource, Long applicationId) {
        Application application = applicationRepository.findById(applicationId)
                .orElseThrow(() -> new RuntimeException("Application not found"));
        
        resource.setApplication(application); // Associate the resource with the application
        resource.setCreatedDate(LocalDateTime.now());
        resource.setUpdatedDate(LocalDateTime.now());
        return resourceRepository.save(resource);
    }
}

import com.example.roles.entitlements.model.Resource;
import com.example.roles.entitlements.model.Application;
import com.example.roles.entitlements.service.ResourceService;
import com.example.roles.entitlements.service.ApplicationService; // Service to fetch applications
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;

import java.util.List;

@Controller
public class ResourceController {
    private final ResourceService resourceService;
    private final ApplicationService applicationService;

    public ResourceController(ResourceService resourceService, ApplicationService applicationService) {
        this.resourceService = resourceService;
        this.applicationService = applicationService;
    }

    @GetMapping("/resources/new")
    public String showResourceForm(Model model) {
        model.addAttribute("resource", new Resource());
        List<Application> applications = applicationService.getAllApplications(); // Fetch all applications
        model.addAttribute("applications", applications);
        return "resource_form"; // Thymeleaf template name
    }

    @PostMapping("/resources")
    public String addResource(@ModelAttribute Resource resource, @RequestParam Long applicationId) {
        resourceService.addResource(resource, applicationId);
        return "redirect:/resources/new"; // Redirect to form after submission
    }
}

<html xmlns:th="http://www.thymeleaf.org">
<head>
    <title>Add New Resource</title>
</head>
<body>
<h1>Add New Resource</h1>
<form action="#" th:action="@{/resources}" th:object="${resource}" method="post">
    <label for="name">Resource Name:</label>
    <input type="text" id="name" th:field="*{name}" required/>

    <label for="description">Description:</label>
    <input type="text" id="description" th:field="*{description}" required/>

    <label for="version">Version:</label>
    <input type="number" id="version" th:field="*{version}" required/>

    <label for="application">Select Application:</label>
    <select id="application" name="applicationId" required>
        <option th:each="application : ${applications}" th:value="${application.id}" th:text="${application.name}"></option>
    </select>

    <button type="submit">Add Resource</button>
</form>
</body>
</html>