import com.example.roles.entitlements.model.UserRolePermission;
import com.example.roles.entitlements.model.EntitlementRolePermission;
import com.example.roles.entitlements.repository.UserRolePermissionRepository;
import com.example.roles.entitlements.repository.EntitlementRolePermissionRepository;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;

@Service
public class UserRolePermissionService {
    private final UserRolePermissionRepository userRolePermissionRepository;
    private final EntitlementRolePermissionRepository entitlementRolePermissionRepository;

    public UserRolePermissionService(UserRolePermissionRepository userRolePermissionRepository,
                                      EntitlementRolePermissionRepository entitlementRolePermissionRepository) {
        this.userRolePermissionRepository = userRolePermissionRepository;
        this.entitlementRolePermissionRepository = entitlementRolePermissionRepository;
    }

    public void associateUserWithRolePermission(String userId, Long entitlementRolePermissionId) {
        EntitlementRolePermission entitlementRolePermission = entitlementRolePermissionRepository.findById(entitlementRolePermissionId)
                .orElseThrow(() -> new RuntimeException("Entitlement Role Permission not found"));

        UserRolePermission userRolePermission = new UserRolePermission();
        userRolePermission.setUserId(userId);
        userRolePermission.setEntitlementRolePermission(entitlementRolePermission);
        userRolePermission.setCreatedDate(LocalDateTime.now());
        userRolePermissionRepository.save(userRolePermission);
    }
}

import com.example.roles.entitlements.service.UserRolePermissionService;
import com.example.roles.entitlements.service.EntitlementRolePermissionService; // To fetch role permissions
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.List;

@Controller
public class UserRolePermissionController {
    private final UserRolePermissionService userRolePermissionService;
    private final EntitlementRolePermissionService entitlementRolePermissionService;

    public UserRolePermissionController(UserRolePermissionService userRolePermissionService,
                                         EntitlementRolePermissionService entitlementRolePermissionService) {
        this.userRolePermissionService = userRolePermissionService;
        this.entitlementRolePermissionService = entitlementRolePermissionService;
    }

    @GetMapping("/users/roles/associate")
    public String showAssociateForm(Model model) {
        model.addAttribute("rolePermissions", entitlementRolePermissionService.getAllRolePermissions()); // Fetch role permissions
        return "associate_user_role_permission"; // Thymeleaf template name
    }

    @PostMapping("/users/roles")
    public String associateUserWithRolePermission(@RequestParam String userId, @RequestParam Long rolePermissionId) {
        userRolePermissionService.associateUserWithRolePermission(userId, rolePermissionId);
        return "redirect:/users/roles/associate"; // Redirect after submission
    }
}

<html xmlns:th="http://www.thymeleaf.org">
<head>
    <title>Associate User with Entitlement Role Permission</title>
</head>
<body>
<h1>Associate User with Entitlement Role Permission</h1>
<form action="#" th:action="@{/users/roles}" method="post">
    <label for="userId">User ID:</label>
    <input type="text" id="userId" name="userId" required/>

    <label for="rolePermission">Select Role Permission:</label>
    <select id="rolePermission" name="rolePermissionId" required>
        <option th:each="permission : ${rolePermissions}" th:value="${permission.id}" th:text="${permission.entitlementRole.name}"></option>
    </select>

    <button type="submit">Associate</button>
</form>
</body>
</html>