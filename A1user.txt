import com.example.roles.entitlements.model.*;
import com.example.roles.entitlements.repository.*;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

import java.time.LocalDateTime;

@Component
public class DataInitializer implements CommandLineRunner {

    private final ApplicationRepository applicationRepository;
    private final ResourceTypeRepository resourceTypeRepository;
    private final ResourceRepository resourceRepository;
    private final ScopeRepository scopeRepository;
    private final EntitlementRoleRepository entitlementRoleRepository;
    private final EntitlementRolePermissionRepository entitlementRolePermissionRepository;
    private final UserRolePermissionRepository userRolePermissionRepository;

    public DataInitializer(ApplicationRepository applicationRepository,
                           ResourceTypeRepository resourceTypeRepository,
                           ResourceRepository resourceRepository,
                           ScopeRepository scopeRepository,
                           EntitlementRoleRepository entitlementRoleRepository,
                           EntitlementRolePermissionRepository entitlementRolePermissionRepository,
                           UserRolePermissionRepository userRolePermissionRepository) {
        this.applicationRepository = applicationRepository;
        this.resourceTypeRepository = resourceTypeRepository;
        this.resourceRepository = resourceRepository;
        this.scopeRepository = scopeRepository;
        this.entitlementRoleRepository = entitlementRoleRepository;
        this.entitlementRolePermissionRepository = entitlementRolePermissionRepository;
        this.userRolePermissionRepository = userRolePermissionRepository;
    }

    @Override
    public void run(String... args) throws Exception {
        // Create Application
        Application app = new Application();
        app.setName("UMBETF");
        app.setType("Web");
        app.setVersion(1L);
        app.setCreatedUserId("admin");
        app.setCreatedDate(LocalDateTime.now());
        applicationRepository.save(app);

        // Create Resource Types
        ResourceType resourceType1 = new ResourceType();
        resourceType1.setName("Application");
        resourceType1.setDescription("Web Application");
        resourceType1.setVersion(1L);
        resourceType1.setCreatedUserId("admin");
        resourceType1.setCreatedDate(LocalDateTime.now());
        resourceType1.setApplication(app);
        resourceTypeRepository.save(resourceType1);

        // Create Resource
        Resource resource = new Resource();
        resource.setName("User Management");
        resource.setDescription("Manage users");
        resource.setVersion(1L);
        resource.setResourceType(resourceType1);
        resource.setCreatedUserId("admin");
        resource.setCreatedDate(LocalDateTime.now());
        resourceRepository.save(resource);

        // Create Scopes
        Scope scope1 = new Scope();
        scope1.setName("FNTAG:mBP-mBCM-mBV-APassignment");
        scope1.setDescription("Assign AP");
        scope1.setVersion(1L);
        scope1.setCreatedUserId("admin");
        scope1.setCreatedDate(LocalDateTime.now());
        scopeRepository.save(scope1);

        Scope scope2 = new Scope();
        scope2.setName("FNTAG:mBP-mBCM-mBV-AddCashAdj");
        scope2.setDescription("Add Cash Adjustment");
        scope2.setVersion(1L);
        scope2.setCreatedUserId("admin");
        scope2.setCreatedDate(LocalDateTime.now());
        scopeRepository.save(scope2);

        // Create Entitlement Role
        EntitlementRole entitlementRole = new EntitlementRole();
        entitlementRole.setName("Admin Role");
        entitlementRole.setDescription("Administrator role with all permissions");
        entitlementRole.setVersion(1L);
        entitlementRole.setCreatedUserId("admin");
        entitlementRole.setCreatedDate(LocalDateTime.now());
        entitlementRole.setResource(resource);
        entitlementRoleRepository.save(entitlementRole);

        // Create Entitlement Role Permission
        EntitlementRolePermission entitlementRolePermission = new EntitlementRolePermission();
        entitlementRolePermission.setEntitlementRole(entitlementRole);
        entitlementRolePermission.setResourceScope(scope1.getResourceScope());
        entitlementRolePermission.setVersion(1L);
        entitlementRolePermission.setCreatedUserId("admin");
        entitlementRolePermission.setCreatedDate(LocalDateTime.now());
        entitlementRolePermissionRepository.save(entitlementRolePermission);

        // Create User Role Permission for a sample user
        UserRolePermission userRolePermission = new UserRolePermission();
        userRolePermission.setUserId("user123");
        userRolePermission.setEntitlementRolePermission(entitlementRolePermission);
        userRolePermission.setVersion(1L);
        userRolePermission.setCreatedUserId("admin");
        userRolePermission.setCreatedDate(LocalDateTime.now());
        userRolePermissionRepository.save(userRolePermission);
    }
}

import com.example.roles.entitlements.model.UserRolePermission;
import com.example.roles.entitlements.repository.UserRolePermissionRepository;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class UserService {
    private final UserRolePermissionRepository userRolePermissionRepository;

    public UserService(UserRolePermissionRepository userRolePermissionRepository) {
        this.userRolePermissionRepository = userRolePermissionRepository;
    }

    public List<UserRolePermission> getUserRolePermissions(String userId) {
        return userRolePermissionRepository.findByUserId(userId);
    }
}

import com.example.roles.entitlements.model.UserRolePermission;
import com.example.roles.entitlements.service.UserService;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.List;

@Controller
public class UserController {
    private final UserService userService;

    public UserController(UserService userService) {
        this.userService = userService;
    }

    @GetMapping("/user/info")
    public String getUserInfo(@RequestParam String userId, Model model) {
        List<UserRolePermission> userPermissions = userService.getUserRolePermissions(userId);
        model.addAttribute("userPermissions", userPermissions);
        return "user_info"; // Thymeleaf template name
    }
}

<html xmlns:th="http://www.thymeleaf.org">
<head>
    <title>User Role Permissions</title>
</head>
<body>
<h1>User Role Permissions</h1>
<form action="#" method="get">
    <label for="userId">User ID:</label>
    <input type="text" id="userId" name="userId" required/>
    <button type="submit">Get Info</button>
</form>

<table>
    <thead>
        <tr>
            <th>User ID</th>
            <th>Entitlement Role</th>
            <th>Resource Scope</th>
            <th>Version</th>
        </tr>
    </thead>
    <tbody>
        <tr th:each="permission : ${userPermissions}">
            <td th:text="${permission.userId}"></td>
            <td th:text="${permission.entitlementRolePermission.entitlementRole.name}"></td> <!-- Assuming a relationship -->
            <td th:text="${permission.entitlementRolePermission.resourceScope.scope.name}"></td>
            <td th:text="${permission.version}"></td>
        </tr>
    </tbody>
</table>
</body>
</html>