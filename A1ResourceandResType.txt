import com.example.roles.entitlements.model.Resource;
import com.example.roles.entitlements.repository.ResourceRepository;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;

@Service
public class ResourceService {
    private final ResourceRepository resourceRepository;

    public ResourceService(ResourceRepository resourceRepository) {
        this.resourceRepository = resourceRepository;
    }

    public Resource addResource(Resource resource) {
        resource.setCreatedDate(LocalDateTime.now());
        resource.setUpdatedDate(LocalDateTime.now());
        return resourceRepository.save(resource);
    }
}

import com.example.roles.entitlements.model.Resource;
import com.example.roles.entitlements.model.ResourceType;
import com.example.roles.entitlements.service.ResourceService;
import com.example.roles.entitlements.service.ResourceTypeService;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;

import java.util.List;

@Controller
public class ResourceController {
    private final ResourceService resourceService;
    private final ResourceTypeService resourceTypeService;

    public ResourceController(ResourceService resourceService, ResourceTypeService resourceTypeService) {
        this.resourceService = resourceService;
        this.resourceTypeService = resourceTypeService;
    }

    @GetMapping("/resources/new")
    public String showResourceForm(Model model) {
        model.addAttribute("resource", new Resource());
        List<ResourceType> resourceTypes = resourceTypeService.getAllResourceTypes();
        model.addAttribute("resourceTypes", resourceTypes);
        return "resource_form"; // Thymeleaf template name
    }

    @PostMapping("/resources")
    public String addResource(@ModelAttribute Resource resource) {
        resourceService.addResource(resource);
        return "redirect:/resources/new"; // Redirect to form after submission
    }
}

<html xmlns:th="http://www.thymeleaf.org">
<head>
    <title>Add New Resource</title>
</head>
<body>
<h1>Add New Resource</h1>
<form action="#" th:action="@{/resources}" th:object="${resource}" method="post">
    <label for="name">Resource Name:</label>
    <input type="text" id="name" th:field="*{name}" required/>

    <label for="description">Description:</label>
    <input type="text" id="description" th:field="*{description}" required/>

    <label for="version">Version:</label>
    <input type="number" id="version" th:field="*{version}" required/>

    <label for="resourceType">Select Resource Type:</label>
    <select id="resourceType" th:field="*{resourceType}" required>
        <option th:each="type : ${resourceTypes}" th:value="${type.id}" th:text="${type.name}"></option>
    </select>

    <button type="submit">Add Resource</button>
</form>
</body>
</html>